"""
Django settings for Tax_consult project.

Generated by 'django-admin startproject' using Django 1.11.15.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, BASE_DIR)
# sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'lzposfpq-apc5qcwrr9ui_3n2w-xe=4ekik_0tp-=6opdt4&fk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'wechat',
    # 'corsheaders',
]

MIDDLEWARE = [
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL=True
ROOT_URLCONF = 'Tax_consult.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Tax_consult.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        # 'NAME': os.path.join(BASE_DIR, 'LZ_ZX.sqlite3'),
        'NAME': os.path.join(BASE_DIR, 'LZ_DB.db'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'


DEBUG = False
if DEBUG:
    pass
else:
    STATIC_ROOT = "static"


# 日志模块,LOGGING定义一个字典对日志模块进行配置
LOGGING = {
    'version': 1,   #日志版本
    'disable_existing_loggers': False,      #True: disable原有日志相关配置
    'formatters': {   #日志格式
        'verbose': {  #详细格式
            'format': '%(levelname)s %(asctime)s %(module)s  %(process)d %(thread)d %(lineno)s %(message)s'
        },
        'simple': {  #简单格式
            # 'format': '%(levelname)s %(pathname)s %(lineno)s %(message)s'
            'format': '%(levelname)s  %(filename)s line:%(lineno)s %(message)s'
        }
    },
    'filters': {  #日志过滤器
        # 'special': {  #特殊过滤器，替换foo成bar，可以自己配置
        #     '()': 'project.logging.SpecialFilter',
        #     'foo': 'bar',
        # },
        'require_debug_true': {# DEBUG级别日志过滤
            '()': 'django.utils.log.RequireDebugTrue',
        }
    },

    'handlers': {  #日志handlers
        # 文件流输出
        'file': {  #文件handler
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            # 日志文件位置
            'filename': os.path.join(os.path.dirname(BASE_DIR), "Tax_consult/logs/weixin.log"),
            'maxBytes': 300 * 1024 * 1024,
            'backupCount': 10,
            'formatter': 'verbose'   # ERROR级别以上的日志都要以verbose格式输出到文件中
        },
        'console':{   #控制器handler，INFO级别以上的日志都要Simple格式输出到控制台
            'level': 'INFO',
            # 'filters': ['require_debug_true'],
            'class':  'logging.StreamHandler',
            'formatter': 'simple',

        }
    },
    'loggers': {
        'django': {
            # 定义了⼀个名为django的⽇志器处理器
            'handlers': ['file', 'console'],
            # 是否允许向上级别冒泡
            'propagate': True,
        },
    }
}